<%= @header %>

### Misc ###
unsetopt beep # turn off annoying beep
bindkey -v # set vi mode
bindkey '^R' history-incremental-search-backward # enable reverse history search
autoload -Uz compinit promptinit
autoload -U colors && colors
autoload -Uz vcs_info
setopt prompt_subst
compinit
promptinit
zstyle :compinstall filename '/home/eherde/.zshrc'
bindkey "^?" backward-delete-char # fix backspace issue
eval `dircolors` # set LS_COLORS


### Prompt ###
# set prompt colors and expansion/contraction
PROMPT="%{$fg_bold[green]%}%n@%m%b%{$reset_color%}:%{$fg_bold[blue]%}%30<...<%~%(?..%{$fg[red]%}(%?%)%{$reset_color%})%{$reset_color%}$ "
RPROMPT="%T" # add time to rprompt

### History ###
HISTFILE=~/.histfile # keep history here
HISTSIZE=1073741824 # GDB uses this variable and can only handle 2^30
SAVEHIST=9223372036854775807 # LONG_MAX
setopt HIST_IGNORE_ALL_DUPS # do not keep duplicate commands
setopt appendhistory autocd extendedglob interactivecomments
alias history=history -f

### Git ###
function prompt-git-remote() { # get information about remotes for use in prompt
	prompt_remotes=""
	local ahead behind
	# quit if not in a git directory
	if ! git rev-parse --git-dir --quiet > /dev/null 2>&1; then return; fi
	ahead=$(git rev-list @{upstream}..HEAD 2>/dev/null | wc -l)
	behind=$(git rev-list HEAD..@{upstream} 2>/dev/null | wc -l)
	[ $ahead -eq 0 ] || prompt_remotes+="%F{2}$ahead%f"
	[ $behind -eq 0  ] || prompt_remotes+="%F{1}$behind%f"
}
function prompt-git-stash() { # get information about the stash for use in prompt
	prompt_stash=""
	local stashes
	# quit if not in a git directory
	if ! git rev-parse --git-dir --quiet > /dev/null 2>&1; then return; fi
	stashes=$(git stash list 2>/dev/null | wc -l)
	(( $stashes )) && prompt_stash="%F{3}$stashes%f"
}

zstyle ':vcs_info:*' check-for-changes true # supposed to check for stash/unstaged/staged
zstyle ':vcs_info:*' get-revision true # get hash
zstyle ':vcs_info:*' actionformats "(%a) %F{5}[%F{2}%b%F{5}]%f"
zstyle ':vcs_info:*' formats "%F{5}[%F{2}%b%F{5}]%f"
zstyle ':vcs_info:*' enable bzr git hg svn

precmd() { # run to setup each prompt
	vcs_info
	prompt-git-remote
	prompt-git-stash
}

RPROMPT='${vcs_info_msg_0_} $prompt_remotes$prompt_stash'\ $RPROMPT # add git information to RPROMPT

### Sources ###
source ~/.aliases # aliases
source ~/.envrc # environment variables
test -f /etc/profile.d/colorls.sh && source $_ # export LS_COLORS
test -f /etc/profile.d/ccache.sh && source $_ # use ccache
test -f /etc/profile.d/colorgcc.sh && source $_ # use color gcc

# source any unmanaged files that match the naming convention
for rc in ~/.*env_local*; source $rc

# vim: syntax=zsh
